# This is a basic workflow that is manually triggered

name: TestPart1

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
  # Allows you to run this workflow manually from the actions tab
  workflow_dispatch:
    
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      # list contents or directory 
      - name: List contents
        run: ls
    # Compiles classes to test
      - name: compile classes
        working-directory: ./src
        run: javac -cp "../testresources/junit-platform-console-standalone-1.6.0.jar" ./KhanBan_Add_Features/Login.java ./KhanBan_Add_Features/Task.java "../test/KhanBan_Add_Features/LoginTest.java" "../test/KhanBan_Add_Features/TaskTest.java"
      
    # list contents of src to verify that classes compiled
      - name: List contents of src directory after compile
        working-directory: ./src/KhanBan_Add_Features
        run: ls
        
      # copy compiled classes to test directory
      - name : copy compiled classes to testresources directory
        working-directory: ./src/KhanBan_Add_Features
        run: cp -t "../../test/KhanBan_Add_Features" Login.class
      
      #Copy compiled tests
      - name : copy compiled Test classes to testresources directory
        working-directory: ./test/KhanBan_Add_Features
        run: cp -t "../../testresources/" Login.class Task.class
      
     # list contents or directory
      - name: List contents test package
        working-directory: ./test/KhanBan_Add_Features
        run: ls
      
      # run Login Class tests and output reports
      - name: run Login Class tests and create report
        working-directory: ./test
        run: |
         ls
         java -jar "../testresources/junit-platform-console-standalone-1.6.0.jar" -cp "." --select-class KhanBan_Add_Features.LoginTest
         
      # run Task Class tests and output reports
      - name: run Task Class tests and create report
        working-directory: ./test
        run: |
         ls
         java -jar "../testresources/junit-platform-console-standalone-1.6.0.jar" -cp "." --select-class KhanBan_Add_Features.TaskTest
